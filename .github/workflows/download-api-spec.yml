name: download-api-spec

on:
  workflow_dispatch:
  workflow_call:
    outputs:
      release-tag:
        description: 'Release tag'
        value: ${{ jobs.get-latest-release.outputs.release-tag }}
      spec-repo:
        description: 'API spec repo'
        value: ${{ jobs.get-latest-release.outputs.spec-repo }}
      spec-file-name:
        description: 'API spec file name'
        value: ${{ jobs.get-latest-release.outputs.spec-file-name }}
      spec-file-url:
        description: 'API spec URL'
        value: ${{ jobs.get-latest-release.outputs.spec-file-url }}
      spec-file-content-base64:
        description: 'API spec content'
        value: ${{ jobs.download-api-spec.outputs.spec-file-content-base64 }}

env:
  spec-repo: zerotier/zerotier-one-api-spec
  spec-file-name: openapi.yaml

jobs:
  get-latest-release:
    runs-on: ubuntu-latest
    outputs:
      release-tag: ${{ steps.get-latest-release.outputs.release-tag }}
      spec-repo: ${{ steps.get-latest-release.outputs.spec-repo }}
      spec-file-name: ${{ steps.get-latest-release.outputs.spec-file-name }}
      spec-file-url: ${{ steps.get-latest-release.outputs.spec-file-url }}
    steps:
      # Get the latest release tag from env.spec-repo
      - name: Get latest release
        id: get-latest-release
        run: |
          # Download latest release info
          curl -sSL -o latest-release.json https://api.github.com/repos/${{ env.spec-repo }}/releases/latest

          # Extract release tag
          release_tag=$(jq -r '.tag_name' latest-release.json)
          echo "release-tag=$release_tag" >> "$GITHUB_OUTPUT"

          # output spec-repo and spec-file-name
          echo "spec-repo=${{ env.spec-repo }}" >> "$GITHUB_OUTPUT"
          echo "spec-file-name=${{ env.spec-file-name }}" >> "$GITHUB_OUTPUT"

          # Extract API spec file URL based on spec-file-name and release_tag
          spec_file_url=$(jq -r '.assets[] | select(.name == env.spec-file-name) | .browser_download_url' latest-release.json)
          echo "spec-file-url=$spec_file_url" >> "$GITHUB_OUTPUT"

  download-api-spec:
    runs-on: ubuntu-latest
    needs: get-latest-release
    outputs:
      spec-file-content-base64: ${{ steps.read-spec.outputs.spec-file-content-base64 }}
    steps:
      # Download the latest API spec from env.spec-url
      - name: Download API spec
        run: curl -sSL -o ${{ env.spec-file-name }} ${{ needs.get-latest-release.outputs.spec-file-url }}
      
      # Read the content of the API spec file and output it in base64 format
      - name: Read spec content
        id: read-spec
        run: |
          content=$(cat ${{ env.spec-file-name }} | base64 -w 0)
          echo "spec-file-content-base64=$content" >> $GITHUB_OUTPUT